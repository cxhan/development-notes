(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{883:function(a,t,s){"use strict";s.r(t);var v=s(86),e=Object(v.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"打造前端脚手架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打造前端脚手架"}},[a._v("#")]),a._v(" 打造前端脚手架")]),a._v(" "),s("h2",{attrs:{id:"cli初识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cli初识"}},[a._v("#")]),a._v(" cli初识")]),a._v(" "),s("h5",{attrs:{id:"cli应包含的内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cli应包含的内容"}},[a._v("#")]),a._v(" cli应包含的内容")]),a._v(" "),s("ul",[s("li",[a._v("创建项目、组件、模块等通用流程")]),a._v(" "),s("li",[a._v("git操作+构建+发布上线")]),a._v(" "),s("li",[a._v("cli操作数据埋点收集")])]),a._v(" "),s("h5",{attrs:{id:"核心价值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心价值"}},[a._v("#")]),a._v(" 核心价值")]),a._v(" "),s("ul",[s("li",[a._v("自动化(创建项目、组件、模块自动化)")]),a._v(" "),s("li",[a._v("标准化(项目目录等因人而异，cli可以实现工程的标准化、规范化)")]),a._v(" "),s("li",[a._v("数据化(研发过程系统化、数据化，使得研发过程可量化，需要cli接入elk等类似的日志系统)")])]),a._v(" "),s("h5",{attrs:{id:"和ci-cd的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和ci-cd的区别"}},[a._v("#")]),a._v(" 和CI/CD的区别")]),a._v(" "),s("ul",[s("li",[a._v("jenkins、travis等在git hooks中触发，服务端执行，只能覆盖云构建的操作，无法覆盖本地的内容，例如创建项目、组件自动化，本地git操作自动化")]),a._v(" "),s("li",[a._v("定制复杂，CI/CD插件开发较复杂，cli开发的模式前端开发较熟悉上手会比较快")])]),a._v(" "),s("h2",{attrs:{id:"cli基本原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cli基本原理"}},[a._v("#")]),a._v(" cli基本原理")]),a._v(" "),s("h5",{attrs:{id:"脚手架的执行流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#脚手架的执行流程"}},[a._v("#")]),a._v(" 脚手架的执行流程")]),a._v(" "),s("p",[a._v("脚手架本质是操作系统命令的执行，包括主命令、命令、命令参数、配置、配置参数5个部分")]),a._v(" "),s("p",[a._v("例如：")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("vue create test"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("app "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("force "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("默认值为"),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("可不设置"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("执行流程如下：")]),a._v(" "),s("ol",[s("li",[a._v("输入命令")]),a._v(" "),s("li",[a._v("解析出vue的主命令")]),a._v(" "),s("li",[a._v("在环境变量中找到vue软链接对应的实际文件vue.js")]),a._v(" "),s("li",[a._v("根据shell头部对应的语言来用不同的语言来执行文件，此处应该是node")]),a._v(" "),s("li",[a._v("vue.js解析command/options(create命令、--force配置及其参数)")]),a._v(" "),s("li",[a._v("vue.js执行command")]),a._v(" "),s("li",[a._v("执行完毕或者执行异常，退出执行")])]),a._v(" "),s("h5",{attrs:{id:"脚手架实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#脚手架实现原理"}},[a._v("#")]),a._v(" 脚手架实现原理")]),a._v(" "),s("p",[a._v("我们可以通过3个问题来大致的了解脚手架如何来选择对应的语言来执行对应的命令及其对应的执行文件")]),a._v(" "),s("ul",[s("li",[a._v("安装的是@vue/cli为何执行命令是vue？是在package.json的bin参数中配置，配置vue命令及其指向文件的相对目录")]),a._v(" "),s("li",[a._v("全局安装@vue/cli的时候发生了什么？npm会通过ln命令生成一个软链接来对应package.json中bin参数设置的所有主命令及其文件")]),a._v(" "),s("li",[a._v("为什么可以直接通过node来执行vue.js而不需要指定node参数？因为vue.js首行通过#!/usr/bin/env node来指定了node来执行该文件，"),s("strong",[a._v("env是指在环境变量中找到node来执行文件")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);